# [
#   {
#       "clear_selection": "clear_selection"
#   },
#   {
#       "copy_and_clear_or_interrupt": "copy_and_clear_or_interrupt"
#   },
#   {
#       "copy_ansi_to_clipboard": "copy_ansi_to_clipboard"
#   },
#   {
#       "copy_or_interrupt": "copy_or_interrupt"
#   },
#   {
#       "copy_to_clipboard": "copy_to_clipboard"
#   },
#   {
#       "pass_selection_to_program": "pass_selection_to_program"
#   },
#   {
#       "paste": "paste"
#   },
#   {
#       "show_first_command_output_on_screen": "show_first_command_output_on_screen"
#   },
#   {
#       "show_last_command_output": "show_last_command_output"
#   },
#   {
#       "show_last_non_empty_command_output": "show_last_non_empty_command_output"
#   },
#   {
#       "show_last_visited_command_output": "show_last_visited_command_output"
#   },
#   {
#       "show_scrollback": "show_scrollback"
#   },
#   {
#       "copy_to_buffer": "copy_to_buffer"
#   },
#   {
#       "paste_from_buffer": "paste_from_buffer"
#   },
#   {
#       "paste_from_clipboard": "paste_from_clipboard"
#   },
#   {
#       "paste_from_selection": "paste_from_selection"
#   },
#   {
#       "dump_lines_with_attrs": "dump_lines_with_attrs"
#   },
#   {
#       "close_shared_ssh_connections": "close_shared_ssh_connections"
#   },
#   {
#       "debug_config": "debug_config"
#   },
#   {
#       "show_kitty_env_vars": "show_kitty_env_vars"
#   },
#   {
#       "goto_layout": "goto_layout"
#   },
#   {
#       "last_used_layout": "last_used_layout"
#   },
#   {
#       "layout_action": "layout_action"
#   },
#   {
#       "next_layout": "next_layout"
#   },
#   {
#       "toggle_layout": "toggle_layout"
#   },
#   {
#       "remove_marker": "remove_marker"
#   },
#   {
#       "scroll_to_mark": "scroll_to_mark"
#   },
#   {
#       "toggle_marker": "toggle_marker"
#   },
#   {
#       "create_marker": "create_marker"
#   },
#   {
#       "send_text": "send_text"
#   },
#   {
#       "show_kitty_doc": "show_kitty_doc"
#   },
#   {
#       "signal_child": "signal_child"
#   },
#   {
#       "clear_terminal": "clear_terminal"
#   },
#   {
#       "combine": "combine"
#   },
#   {
#       "disable_ligatures_in": "disable_ligatures_in"
#   },
#   {
#       "discard_event": "discard_event"
#   },
#   {
#       "edit_config_file": "edit_config_file"
#   },
#   {
#       "hide_macos_app": "hide_macos_app"
#   },
#   {
#       "hide_macos_other_apps": "hide_macos_other_apps"
#   },
#   {
#       "input_unicode_character": "input_unicode_character"
#   },
#   {
#       "kitten": "kitten"
#   },
#   {
#       "kitty_shell": "kitty_shell"
#   },
#   {
#       "launch": "launch"
#   },
#   {
#       "load_config_file": "load_config_file"
#   },
#   {
#       "minimize_macos_window": "minimize_macos_window"
#   },
#   {
#       "open_url": "open_url"
#   },
#   {
#       "open_url_with_hints": "open_url_with_hints"
#   },
#   {
#       "remote_control": "remote_control"
#   },
#   {
#       "set_colors": "set_colors"
#   },
#   {
#       "sleep": "sleep"
#   },
#   {
#       "toggle_macos_secure_keyboard_entry": "toggle_macos_secure_keyboard_entry"
#   },
#   {
#       "no_op": "no_op"
#   },
#   {
#       "mouse_click_url": "mouse_click_url"
#   },
#   {
#       "mouse_click_url_or_select": "mouse_click_url_or_select"
#   },
#   {
#       "mouse_handle_click": "mouse_handle_click"
#   },
#   {
#       "mouse_select_command_output": "mouse_select_command_output"
#   },
#   {
#       "mouse_selection": "mouse_selection"
#   },
#   {
#       "mouse_show_command_output": "mouse_show_command_output"
#   },
#   {
#       "paste_selection": "paste_selection"
#   },
#   {
#       "paste_selection_or_clipboard": "paste_selection_or_clipboard"
#   },
#   {
#       "scroll_end": "scroll_end"
#   },
#   {
#       "scroll_home": "scroll_home"
#   },
#   {
#       "scroll_line_down": "scroll_line_down"
#   },
#   {
#       "scroll_line_up": "scroll_line_up"
#   },
#   {
#       "scroll_page_down": "scroll_page_down"
#   },
#   {
#       "scroll_page_up": "scroll_page_up"
#   },
#   {
#       "scroll_prompt_to_bottom": "scroll_prompt_to_bottom"
#   },
#   {
#       "scroll_prompt_to_top": "scroll_prompt_to_top"
#   },
#   {
#       "scroll_to_prompt": "scroll_to_prompt"
#   },
#   {
#       "close_other_tabs_in_os_window": "close_other_tabs_in_os_window"
#   },
#   {
#       "close_tab": "close_tab"
#   },
#   {
#       "detach_tab": "detach_tab"
#   },
#   {
#       "goto_tab": "goto_tab"
#   },
#   {
#       "move_tab_backward": "move_tab_backward"
#   },
#   {
#       "move_tab_forward": "move_tab_forward"
#   },
#   {
#       "new_tab": "new_tab"
#   },
#   {
#       "new_tab_with_cwd": "new_tab_with_cwd"
#   },
#   {
#       "next_tab": "next_tab"
#   },
#   {
#       "previous_tab": "previous_tab"
#   },
#   {
#       "select_tab": "select_tab"
#   },
#   {
#       "set_tab_title": "set_tab_title"
#   },
#   {
#       "close_other_windows_in_tab": "close_other_windows_in_tab"
#   },
#   {
#       "eighth_window": "eighth_window"
#   },
#   {
#       "fifth_window": "fifth_window"
#   },
#   {
#       "first_window": "first_window"
#   },
#   {
#       "focus_visible_window": "focus_visible_window"
#   },
#   {
#       "fourth_window": "fourth_window"
#   },
#   {
#       "move_window": "move_window"
#   },
#   {
#       "move_window_backward": "move_window_backward"
#   },
#   {
#       "move_window_forward": "move_window_forward"
#   },
#   {
#       "move_window_to_top": "move_window_to_top"
#   },
#   {
#       "neighboring_window": "neighboring_window"
#   },
#   {
#       "next_window": "next_window"
#   },
#   {
#       "ninth_window": "ninth_window"
#   },
#   {
#       "nth_window": "nth_window"
#   },
#   {
#       "previous_window": "previous_window"
#   },
#   {
#       "reset_window_sizes": "reset_window_sizes"
#   },
#   {
#       "resize_window": "resize_window"
#   },
#   {
#       "second_window": "second_window"
#   },
#   {
#       "seventh_window": "seventh_window"
#   },
#   {
#       "sixth_window": "sixth_window"
#   },
#   {
#       "swap_with_window": "swap_with_window"
#   },
#   {
#       "tenth_window": "tenth_window"
#   },
#   {
#       "third_window": "third_window"
#   },
#   {
#       "change_font_size": "change_font_size"
#   },
#   {
#       "close_os_window": "close_os_window"
#   },
#   {
#       "close_window": "close_window"
#   },
#   {
#       "close_window_with_confirmation": "close_window_with_confirmation"
#   },
#   {
#       "detach_window": "detach_window"
#   },
#   {
#       "new_os_window": "new_os_window"
#   },
#   {
#       "new_os_window_with_cwd": "new_os_window_with_cwd"
#   },
#   {
#       "new_window": "new_window"
#   },
#   {
#       "new_window_with_cwd": "new_window_with_cwd"
#   },
#   {
#       "nth_os_window": "nth_os_window"
#   },
#   {
#       "quit": "quit"
#   },
#   {
#       "set_background_opacity": "set_background_opacity"
#   },
#   {
#       "start_resizing_window": "start_resizing_window"
#   },
#   {
#       "toggle_fullscreen": "toggle_fullscreen"
#   },
#   {
#       "toggle_maximized": "toggle_maximized"
#   }
#
# fix path
env PATH=/opt/homebrew/bin:$PATH

# KITTY 2 -> LIKE TMUX
# See https://sw.kovidgoyal.net/kitty/conf.html
# font_family Hack
font_family Hack Nerd Font Mono
font_size 13
adjust_line_height 120%
# font_family FiraCode Nerd Font Mono


editor /opt/homebrew/bin/nvim

# Shell integration is sourced and configured manually
shell_integration enabled


# NO BELL
enable_audio_bell no

# active_tab_font_style bold
allow_remote_control yes
# for vim navigator
listen_on unix:/tmp/mykitty
confirm_os_window_close 1
cursor_shape Underline
cursor_underline_thickness 1
detect_urls yes
dim_opacity 0.75
disable_ligatures always
hide_window_decorations titlebar-only
inactive_text_alpha 0.75
macos_option_as_alt no
# macos_titlebar_color background
open_url_with default
shell_integration enabled

url_prefixes http https file ftp gemini irc gopher mailto news git
url_style curly
window_padding_width 10


# SHORTCUT
# TABS
tab_activity_symbol ""
tab_bar_edge top
tab_bar_min_tabs 1
tab_bar_style powerline
active_tab_font_style bold
inactive_tab_font_style normal
tab_powerline_style angled
# tab_separator ""
tab_switch_strategy previous
tab_title_template " {index}  {title}  "
# 
map ctrl+f>, set_tab_title
map ctrl+f>c new_tab_with_cwd
map super+w close_window_with_confirmation
map super+shift+w close_tab
# map kitty_mod+t new_tab_with_cwd
map ctrl+1 goto_tab 1
map ctrl+2 goto_tab 2
map ctrl+3 goto_tab 3
map ctrl+4 goto_tab 4
map ctrl+5 goto_tab 5
map ctrl+6 goto_tab 6
map ctrl+f>1 goto_tab 1
map ctrl+f>2 goto_tab 2
map ctrl+f>3 goto_tab 3
map ctrl+f>4 goto_tab 4
map ctrl+f>5 goto_tab 5
map ctrl+f>6 goto_tab 6


# windows
# map kitty_mode+enter new_window

map kitty_mod+enter new_window
map kitty_mod+h neighboring_window left
map kitty_mod+j neighboring_window down
map kitty_mod+k neighboring_window up
map kitty_mod+l neighboring_window right

map ctrl+j kitten pass_keys.py neighboring_window bottom ctrl+j
map ctrl+k kitten pass_keys.py neighboring_window top    ctrl+k
map ctrl+h kitten pass_keys.py neighboring_window left   ctrl+h
map ctrl+l kitten pass_keys.py neighboring_window right  ctrl+l
map ctrl+f>x close_window_with_confirmation
map kitty_mod+w close_window_with_confirmation
map ctrl+f>% launch --cwd current --location vsplit
map ctrl+f>s launch --cwd current --location vsplit
map ctrl+f>h launch --cwd current --location hsplit
map kitty_mod+r start_resizing_window

#scrollack
scrollback_lines 10000
map f1 show_scrollback
mouse_map left press ungrabbed mouse_selection normal
mouse_map left doublepress ungrabbed mouse_selection word
mouse_map left triplepress ungrabbed mouse_selection line
mouse_map shift+left press ungrabbed,grabbed mouse_selection normal

# dont allow quitting
map kitty_mod+q no_op

# reload config
map kitty_mod+f5 load_config_file
map kitty_mod+f3 kitten themes


# map ctrl+alt+enter launch --cwd=current
map kitty_mod+/ launch --location hsplit
map kitty_mod+; next_layout
map kitty_mod+down neighboring_window down
map kitty_mod+right neighboring_window right
map kitty_mod+up neighboring_window up
map kitty_mod+left neighboring_window left
# map kitty_mod+m>p launch --location=neighbor --cwd=current bash -c 'gh pr checks --watch && read -n 1 -s -r -p "Press any key to exit"' 
# map kitty_mod+o>s kitten hints --type regex --regex '(?m)(stash@\{[^}]+\})' --program 'launch --type=overlay git stash show -p' 
# map kitty_mod+t new_tab_with_cwd
map kitty_mod+y>f kitten hints --type path --program @
map kitty_mod+y>h kitten hints --type hash --program @
map kitty_mod+y>l kitten hints --type line --program @
map kitty_mod+y>w kitten hints --type word --program @
# map shift+super+w close_os_window

# custom to send to vim
map ctrl+` send_text all \x1b[126;5u
# using: https://stackoverflow.com/questions/16359878/how-to-map-shift-enter
# ascii tables: https://www.rapidtables.com/code/text/ascii-table.html
# map shift+enter              send_text all \x1b[13;2u
# map ctrl+enter               send_text all \x1b[13;5u
# map ctrl+shift+enter         send_text all \x1b[13;6u
# map shift+tab                send_text all \x1b[9;2u 
# map ctrl+tab                 send_text all \x1b[9;5u 
# map ctrl+shift+tab           send_text all \x1b[9;6u 

# using: https://www.reddit.com/r/neovim/comments/mbj8m5/how_to_setup_ctrlshiftkey_mappings_in_neovim_and/
# map ctrl+shift+j             send_text all \x1b[74;5u
# map ctrl+shift+k             send_text all \x1b[75;5u
# map ctrl+shift+h             send_text all \x1b[72;5u
# map ctrl+shift+l             send_text all \x1b[76;5u
# map ctrl+shift+k             send_text all \x1b[75;5u
map ctrl+shift+o             send_text all \x1b[79;6u
map ctrl+shift+p             send_text all \x1b[80;6u
# map super+p             send_text all \x1b[80;3u
# map super+shift+p             send_text all \x1b[80;4u
# map super+k             send_text all \x1b[75;3u
# old tmmuxh shit
# map ctrl+1 send_text all \x1b[49;5u
# map ctrl+2 send_text all \x1b[50;5u
# map ctrl+3 send_text all \x1b[51;5u
# map ctrl+4 send_text all \x1b[52;5u
# map ctrl+5 send_text all \x1b[53;5u
# map ctrl+6 send_text all \x1b[54;5u
# map ctrl+7 send_text all \x1b[55;5u
# map ctrl+8 send_text all \x1b[56;5u
# map ctrl+9 send_text all \x1b[57;5u
# map ctrl+0 send_text all \x1b[58;5u



globinclude kitty.d/**/*.conf


# BEGIN_KITTY_THEME
# Catppuccin-Mocha
include current-theme.conf

startup_session ./sessions/gamma.conf
